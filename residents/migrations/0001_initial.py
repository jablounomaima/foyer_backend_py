# Generated by Django 5.2.4 on 2025-08-07 02:34

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RoomPricing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_type', models.CharField(choices=[('single', 'Chambre individuelle'), ('double', 'Chambre double'), ('triple', 'Chambre triple')], max_length=10, unique=True)),
                ('monthly_rent', models.DecimalField(decimal_places=2, max_digits=10)),
                ('deposit', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'verbose_name': 'Tarification des chambres',
                'verbose_name_plural': 'Tarifications des chambres',
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_type', models.CharField(choices=[('single', 'Simple'), ('double', 'Double'), ('triple', 'Triple')], max_length=10)),
                ('gender', models.CharField(choices=[('M', 'Garçon'), ('F', 'Fille')], max_length=1)),
                ('roommate_preference', models.TextField(blank=True, help_text='Préférence de colocataire (étudiant, travailleur, ou nom connu)')),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('approved', 'Approuvée'), ('rejected', 'Refusée'), ('paid', 'Payée'), ('cancelled', 'Annulée')], default='pending', max_length=10)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('payment_deadline', models.DateTimeField(blank=True, null=True)),
                ('resident', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Demande de réservation',
                'verbose_name_plural': 'Demandes de réservation',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('method', models.CharField(max_length=50)),
                ('proof', models.ImageField(upload_to='payments/')),
                ('notes', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'En attente de vérification'), ('verified', 'Payé'), ('rejected', 'Rejeté')], default='pending', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('paid_at', models.DateTimeField(auto_now_add=True)),
                ('reservation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='residents.reservation')),
            ],
        ),
        migrations.CreateModel(
            name='Resident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('telephone', models.CharField(blank=True, max_length=20)),
                ('date_naissance', models.DateField(blank=True, null=True)),
                ('lieu_naissance', models.CharField(blank=True, max_length=100)),
                ('nationalite', models.CharField(blank=True, max_length=50)),
                ('universite', models.CharField(blank=True, max_length=100)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photos/')),
                ('chambre', models.CharField(blank=True, max_length=10)),
                ('genre', models.CharField(blank=True, choices=[('M', 'Garçon'), ('F', 'Fille')], max_length=1)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='resident_set', related_query_name='resident', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='resident_user_permissions_set', related_query_name='resident', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='MonthlyPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.CharField(choices=[('janvier', 'Janvier'), ('fevrier', 'Février'), ('mars', 'Mars'), ('avril', 'Avril'), ('mai', 'Mai'), ('juin', 'Juin'), ('juillet', 'Juillet'), ('aout', 'Août'), ('septembre', 'Septembre'), ('octobre', 'Octobre'), ('novembre', 'Novembre'), ('decembre', 'Décembre')], max_length=10)),
                ('year', models.PositiveIntegerField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('proof', models.ImageField(upload_to='payments/')),
                ('status', models.CharField(choices=[('pending', 'En attente de vérification'), ('verified', 'Payé'), ('overdue', 'Non payé')], default='pending', max_length=10)),
                ('paid_at', models.DateTimeField(auto_now_add=True)),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='residents.reservation')),
            ],
            options={
                'ordering': ['-year', 'month'],
                'unique_together': {('reservation', 'month', 'year')},
            },
        ),
    ]
